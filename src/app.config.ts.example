
// eslint-disable-next-line @typescript-eslint/no-empty-object-type
type AppConfig = {}

export class HeadHunterConfig implements AppConfig {
    readonly redirectUrl!: string 
    readonly clientId!: string 
    readonly clientSecret!: string 
    readonly userAgent!: string
}

export class TelegramConfig implements AppConfig {
    readonly botToken!: string 
}

export class BaseConfig implements AppConfig {
    readonly port!: number
    readonly syncDatabase!: boolean
}

export interface Config {
    headHunterConfig: HeadHunterConfig
    telegramConfig: TelegramConfig
    baseConfig: BaseConfig
}

const appConfig: Config = {
    baseConfig: {
        port: 3000,
        syncDatabase: true,
    },
    headHunterConfig: {
        redirectUrl: 'http://localhost:3000/user/auth',
        clientId: 'ENTER_CLIENT_ID',
        clientSecret: 'ENTER_CLIENT_SECRET',
        userAgent: 'UpResume/0.1 (bedrew@yandex.com)',
    },
    telegramConfig: {
        botToken: 'ENTER_BOT_TOKEN'
    }
}

export const getConfig = <T extends AppConfig>(config: { new(): T }): T => {
    const configInstance: T = new config()
    const configKey = Object.keys(appConfig).find(
        key => key.toLowerCase() === config.name.toLowerCase()
    ) as keyof Config
    for (const key of Object.keys(appConfig[configKey])) { 
        configInstance[key] = appConfig[configKey][key]
    }
    return configInstance
}